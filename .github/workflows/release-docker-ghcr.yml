name: Release Docker to GHCR
on:
  workflow_call:

permissions:
    contents: write    
    packages: write

env: 
  REGISTRY_IMAGE: ghcr.io/${{ github.repository }}

jobs:
    release_docker:
        runs-on: ${{ matrix.runner }}
        permissions:
            packages: write
            contents: write
        strategy:
            fail-fast: false
            matrix:
                include:
                    - runner: ubuntu-latest
                      target: x86_64-unknown-linux-gnu
                      os: linux
                      arch: x86_64
                    - runner: ubuntu-24.04-arm
                      target: aarch64-unknown-linux-gnu
                      os: linux
                      arch: arm64
        steps:
        - name: Prepare
          run: |
            platform=${{ matrix.os }}/${{ matrix.arch }}
            echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV          
        - uses: actions/checkout@v4
        - name: Docker meta
          id: meta
          uses: docker/metadata-action@v5
          with:
            images: ${{ env.REGISTRY_IMAGE }}
            tags: |
              type=ref,event=branch
              type=ref,event=pr
              type=semver,pattern={{version}}
              type=semver,pattern={{major}}.{{minor}}
              type=sha
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3
        - name: Login to GitHub Container Registry
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
        - name: Build and push
          id: push  
          uses: docker/build-push-action@v6
          with:
            tags: ${{ steps.meta.outputs.tags }}
            annotations: ${{ steps.meta.outputs.annotations }}
            labels: ${{ steps.meta.outputs.labels }}
            platforms: ${{ matrix.os }}/${{ matrix.arch }}
            outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
            cache-from: type=gha
            cache-to: type=gha
              
        - name: Export digest
          run: |
            mkdir -p /tmp/digests
            digest="${{ steps.build.outputs.digest }}"
            touch "/tmp/digests/${digest#sha256:}"               
        - name: Upload digest
          uses: actions/upload-artifact@v4
          with:
            name: digests-${{ env.PLATFORM_PAIR }}
            path: /tmp/digests/*
            if-no-files-found: error
            retention-days: 1
        - name: Generate artifact attestation
          uses: actions/attest-build-provenance@v2
          with:
            subject-name: ${{ env.REGISTRY_IMAGE }}
            subject-digest: ${{ steps.push.outputs.digest }}
            push-to-registry: true

    merge:
      runs-on: ubuntu-latest
      needs:
        - release_docker
      steps:
        - name: Download digests
          uses: actions/download-artifact@v4
          with:
            path: /tmp/digests
            pattern: digests-*
            merge-multiple: true
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3
        - name: Docker meta
          id: meta
          uses: docker/metadata-action@v5
          with:
            images: ${{ env.REGISTRY_IMAGE }}
        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
        - name: Create manifest list and push
          working-directory: /tmp/digests
          run: |
            docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
              $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)          
        - name: Inspect image
          run: |
            docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}
